#container-carousel {
  position: relative;  // To anchor the position:absolute elements below
}

.carousel-institute {
 padding-bottom: 0px;
}

.carousel.slide {
    background-position: center top;
    width: 100%;
    overflow: hidden;
    margin-bottom: 0pt;
}

.carousel-item {
    text-align: center;  // For the inline-block below
    > div {
        display: inline-block;
    }

    div.legend {
        position: absolute;
        left: 0pt;
        margin: 0pt 20pt 0pt 20pt;

        text-align: left;  // Countermand parent

        top: ($sti-carousel-button-distancefromtop + $sti-carousel-button-legend-margin);

        font-family: 'Open Sans', sans-serif;
        color: white;

        a {
            color: white;
            text-decoration: none;
        }

        h1, h2 {
            text-shadow: 1px 1px 2px black;
        }
        @media screen and (max-width: $carousel-controls-toosmall - 1) {
            h1 {
                font-size: 5vw;
            }
            h2 {
                font-size: 4vw;
            }
        }
        @media screen and (min-width: $carousel-controls-toosmall) {
            h1 {
                font-size: 2.1em;
            }
            h2 {
                font-size: 1.5em;
            }
        }
    }
}

.sti-carousel-button {
    position: absolute;
    top: $sti-carousel-button-distancefromtop;

    @media screen and (max-width: $carousel-controls-toosmall - 1) {
       visibility: hidden;
    }
  &.next {
    right: $sti-carousel-button-distancefromleftright;
  }
  &.prev {
    left: $sti-carousel-button-distancefromleftright;
  }
}

.carousel-control-prev-icon {
  background-image: url("theme-epfl-sti/assets/left.png");
}

.carousel-control-next-icon {
  background-image: url("theme-epfl-sti/assets/right.png");
}

.carousel-control-prev-icon:hover {
  background-image: url("theme-epfl-sti/assets/left_desat.png");
}

.carousel-control-next-icon:hover {
  background-image: url("theme-epfl-sti/assets/right_desat.png");
}

#redwave {
  pointer-events: none;  // Can click through the wave

  height: 0px;

  img {
    display: block;
    max-width: 100%;
    position: absolute;
    bottom: -1px;  // Better bite 1px off the front row, than show
                   // a fractional pixel of the image behind the wave
    left: 50%;
    transform: translateX(-50%);
  }
}

#carousel {
  max-height: $carousel-container-max-height;
}

.carousel.carousel-institute .carousel-item {
  max-height: $carousel-institute-container-max-height;
  div.legend {
    top: $carousel-institute-legend-position-top;
    overflow: hidden;
    padding-bottom: 200pt;
  }
}

.carousel-institute-headline {
  background: rgba(0,0,0,0.5);
  margin: 0 !important;
  text-align: left;
  bottom: 0px;
  width: 100%;
  padding: 10px 0 0 15px;
  text-transform: uppercase;
}

/**************************************************************************/
/* We want the red wave below carousel legends (but above carousel pics), */
/* including during carousel transitions                                  */
/**************************************************************************/
#container-carousel {
  z-index: 0;  // Create a stacking context - The other ingredient,
               // position:relative is at the top of this file
}

.carousel-item div.legend {
    // Again, position:absolute is set at the top of this file
    z-index: 5;  // Any positive value would do the trick - Perhaps
                 // surprisingly, #redwave doesn't have a z-index value
                 // and doesn't need one
}

// Undo Bootstrap's transform-based carousel as it breaks z-index i.e.
// the text would flow under the red wave while it slides. See also
// _bootstrap_variables.scss
.carousel-item-next.carousel-item-left,
.carousel-item-prev.carousel-item-right,
.carousel-item-next, .carousel-item-prev,
.active.carousel-item-right, .active.carousel-item-left {
  transform: none;
}
.carousel-item {
  // Why indeed?
  // (https://stackoverflow.com/questions/42176398/why-does-carousel-item-in-bootstrap-use-perspective-1000)
  perspective: none;
}

// Work around https://github.com/twbs/bootstrap/pull/26452
.carousel-item {
  transition: none;
}
.carousel-item-left,.carousel-item-right {
   @include transition($carousel-transition);  // From _bootstrap_variables.scss
}

// Set up our own, margin-left-based carousel transitions
// (See also _bootstrap_variables.scss)
// A next (or prev) item appears... (was display: none before; is
// display: block now)
.carousel-item-next { margin-left: 100%; }
.carousel-item-prev { margin-left: -100%; }
// ... and is promptly brought into the spotlight (see ../js/carousel.js
// for the hack that makes this happen)
.carousel-item-next.ready-set-go,
.carousel-item-prev.ready-set-go, {
  margin-left: 0%;
}

// Exiting stage left (or right)
.active.carousel-item-left {
  margin-left: -100%;
}
.active.carousel-item-right {
  margin-left: 100%;
}
